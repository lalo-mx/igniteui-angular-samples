{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/financial-chart/overview/financial-chart-overview-sample.component.ts","content":"import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { FinancialDataService } from \"../services/financial-data.service\";\nimport { GenerateOhlcPricesService } from \"../services/generate-ohlc-prices.service\";\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [ GenerateOhlcPricesService ],\n    selector: \"app-financial-chart-overview-sample\",\n    styleUrls: [\"./financial-chart-overview-sample.component.scss\"],\n    templateUrl: \"./financial-chart-overview-sample.component.html\"\n})\nexport class FinancialChartOverviewComponent {\n\n    public data: any;\n\n    constructor(private dataService: GenerateOhlcPricesService) {\n        const dateStart = new Date(2017, 0, 1);\n        const dateStop = new Date(2018, 11, 31);\n        const stock1 = this.dataService.GetStockHistoryBetween(dateStart, dateStop);\n        const stock2 = this.dataService.GetStockHistoryBetween(dateStart, dateStop);\n        stock1.title = \"General Motors (GM)\";\n        stock2.title = \"General Electric (GE)\";\n        this.data = [ stock1, stock2 ];\n    }\n}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/financial-chart/overview/financial-chart-overview-sample.component.html","content":"<igx-financial-chart height=\"100%\" width=\"100%\"\n    [dataSource]=\"data\"\n    chartType=\"line\"\n    volumeType=\"line\"\n    overlayTypes=\"BollingerBands\"\n    isLegendVisible=\"true\">\n</igx-financial-chart>"},{"hasRelativeAssetsUrls":false,"path":"src/app/financial-chart/overview/financial-chart-overview-sample.component.scss","content":""},{"hasRelativeAssetsUrls":false,"path":"src/app/financial-chart/services/generate-ohlc-prices.service.ts","content":"import { Injectable } from \"@angular/core\";\n\n// this data service generates OHLC prices with 1 day interval between specified range of dates\n@Injectable()\nexport class GenerateOhlcPricesService {\n\n    public daysInterval: number;\n    public priceStart: number;\n    public priceRange: number;\n    public volumeRange: number;\n    public volumeStart: number;\n\n    constructor() {\n        this.daysInterval = 1;\n        this.priceStart = 300;\n        this.priceRange = 5;\n        this.volumeRange = 100;\n        this.volumeStart = 10000;\n    }\n\n    public GetStockHistoryBetween(dateStart: Date, dateEnd: Date): any {\n        let time = this.AddDays(dateStart, 0);\n        let v = this.volumeStart;\n        let o = this.priceStart;\n        let h = o + (Math.random() * this.priceRange);\n        let l = o - (Math.random() * this.priceRange);\n        let c = l + (Math.random() * (h - l));\n\n        const stock = [];\n\n        while (time.getTime() < dateEnd.getTime()) {\n            stock.push({ date: time, open: o, high: h, low: l, close: c, volume: v });\n\n            o = c + ((Math.random() - 0.5) * this.priceRange);\n            h = o + (Math.random() * this.priceRange);\n            l = o - (Math.random() * this.priceRange);\n            c = l + (Math.random() * (h - l));\n            v = v + ((Math.random() - 0.5) * this.volumeRange);\n\n            o = Math.round(o * 100) / 100;\n            h = Math.round(h * 100) / 100;\n            l = Math.round(l * 100) / 100;\n            c = Math.round(c * 100) / 100;\n            v = Math.round(v * 100) / 100;\n            time = this.AddDays(time, this.daysInterval);\n        }\n        // setting data intent for Series Title\n        (stock as any).__dataIntents = {\n            close: [\"SeriesTitle/Stock Prices\"]\n        };\n\n        return stock;\n    }\n\n    public AddDays(date: Date, days: number): Date {\n        return new Date(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n\n    public AddYears(date: Date, years: number): Date {\n        return new Date(date.getFullYear() + years, date.getMonth(), date.getDate());\n    }\n\n    public GetStockHistoryFrom(dateEnd: Date, years: number): any {\n\n        const dateStart = this.AddYears(dateEnd, -years);\n        return this.GetStockHistoryBetween(dateStart, dateEnd);\n    }\n}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { IgxFinancialChartModule } from \"igniteui-angular-charts/ES5/igx-financial-chart-module\";\r\nimport { FinancialChartOverviewComponent } from \"./financial-chart/overview/financial-chart-overview-sample.component\";\r\nimport { GenerateOhlcPricesService } from \"./financial-chart/services/generate-ohlc-prices.service\";\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\r\n\t\tFinancialChartOverviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\r\n\t\tIgxFinancialChartModule\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class AppModule {}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-financial-chart-overview-sample></app-financial-chart-overview-sample>"}],"sampleDependencies":"{\"@angular/animations\":\"7.1.1\",\"@angular/common\":\"7.1.1\",\"@angular/compiler\":\"7.1.1\",\"@angular/core\":\"7.1.1\",\"@angular/forms\":\"7.1.1\",\"@angular/platform-browser\":\"7.1.1\",\"@angular/platform-browser-dynamic\":\"7.1.1\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.4.1\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"7.1.0\",\"igniteui-angular-charts\":\"6.2.2\",\"igniteui-angular-core\":\"6.2.2\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.3.3\",\"tslib\":\"^1.9.0\",\"web-animations-js\":\"^2.3.1\",\"zone.js\":\"^0.8.26\"}"}