{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/grid/grid-batch-editing/grid-batch-editing-sample.component.ts","content":"import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { data } from \"./data\";\n\nimport { IgxDialogComponent, IgxGridComponent, Transaction } from \"igniteui-angular\";\n\n@Component({\n    selector: \"app-grid-row-edit\",\n    styleUrls: [`grid-batch-editing-sample.component.scss`],\n    templateUrl: \"grid-batch-editing-sample.component.html\"\n})\nexport class GridBatchEditingSampleComponent implements OnInit {\n    @ViewChild(\"gridRowEditTransaction\", { read: IgxGridComponent }) public grid: IgxGridComponent;\n    @ViewChild(IgxDialogComponent) public dialog: IgxDialogComponent;\n    @ViewChild(\"dialogGrid\", { read: IgxGridComponent }) public dialogGrid: IgxGridComponent;\n\n    public currentActiveGrid: { id: string, transactions: any[] } = { id: \"\", transactions: [] };\n\n    public data: any[];\n    public transactionsData: Transaction[] = [];\n    private addProductId: number;\n\n    constructor() {\n        this.data = data;\n        this.addProductId = this.data.length + 1;\n    }\n\n    public ngOnInit(): void {\n        this.transactionsData = this.grid.transactions.getAggregatedChanges(true);\n        this.grid.transactions.onStateUpdate.subscribe(() => {\n            this.transactionsData = this.grid.transactions.getAggregatedChanges(true);\n        });\n    }\n\n    public addRow(gridID) {\n        this.grid.addRow({\n            CategoryID: this.getRandomInt(1, 10),\n            Discontinued: this.getRandomInt(1, 10) % 2 === 0,\n            OrderDate: new Date(this.getRandomInt(2000, 2050), this.getRandomInt(0, 11), this.getRandomInt(1, 25))\n            .toISOString().slice(0, 10),\n            ProductID: this.addProductId++,\n            ProductName: \"Product with index \" + this.getRandomInt(0, 20),\n            QuantityPerUnit: (this.getRandomInt(1, 10) * 10).toString() + \" pcs.\",\n            ReorderLevel: this.getRandomInt(10, 20),\n            SupplierID: this.getRandomInt(1, 20),\n            UnitPrice: this.getRandomInt(10, 1000),\n            UnitsInStock: this.getRandomInt(1, 100),\n            UnitsOnOrder: this.getRandomInt(1, 20)\n        });\n    }\n\n    public deleteRow(rowID) {\n        this.grid.deleteRow(rowID);\n    }\n\n    public undo() {\n        this.grid.transactions.undo();\n    }\n\n    public redo() {\n        this.grid.transactions.redo();\n    }\n\n    public openCommitDialog() {\n        this.dialog.open();\n        this.dialogGrid.reflow();\n    }\n\n    public commit() {\n        this.grid.transactions.commit(this.data);\n        this.dialog.close();\n    }\n\n    public cancel() {\n        this.dialog.close();\n    }\n\n    public discard() {\n        this.grid.transactions.clear();\n        this.dialog.close();\n    }\n\n    public stateFormatter(value: string) {\n        return JSON.stringify(value);\n    }\n\n    public typeFormatter(value: string) {\n        return value.toUpperCase();\n    }\n\n    private getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    private classFromType(type: string): string {\n        return `transaction--${type.toLowerCase()}`;\n    }\n\n    public get undoEnabled(): boolean {\n        return this.grid.transactions.canUndo;\n    }\n\n    public get redoEnabled(): boolean {\n        return this.grid.transactions.canRedo;\n    }\n\n    public get hasTransactions(): boolean {\n        return this.grid.transactions.getAggregatedChanges(false).length > 0;\n    }\n}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/grid/grid-batch-editing/grid-batch-editing-sample.component.html","content":"<app-grid-with-transactions>\n    <igx-grid #gridRowEditTransaction [data]=\"data\" [primaryKey]=\"'ProductID'\" width=\"100%\" height=\"500px\"\n        [rowEditable]=\"true\" [allowFiltering]=\"true\">\n        <igx-column [pinned]=\"true\" [filterable]=\"false\">\n            <ng-template igxCell let-cell=\"cell\" let-val>\n                <button igxButton (click)=\"deleteRow(cell.cellID.rowID)\" [disabled]=\"cell.row.deleted\">Delete</button>\n            </ng-template>\n        </igx-column>\n        <igx-column field=\"ProductID\" header=\"Product ID\" [pinned]=\"true\" [filterable]=\"false\"></igx-column>\n        <igx-column field=\"ProductName\" header=\"Product Name\" [dataType]=\"'string'\" [sortable]=\"true\" [pinned]=\"true\"></igx-column>\n        <igx-column field=\"UnitPrice\" header=\"Unit Price\" [dataType]=\"'string'\" [sortable]=\"true\"></igx-column>\n        <igx-column field=\"UnitsOnOrder\" header=\"Units On Order\" [dataType]=\"'number'\" [editable]=\"false\"\n            [filterable]=\"false\"></igx-column>\n        <igx-column field=\"UnitsInStock\" header=\"Units In Stock\" [dataType]=\"'number'\" [sortable]=\"true\">\n            <ng-template igxCellEditor let-cell=\"cell\">\n                <input name=\"units\" [igxFocus]=\"true\" [(ngModel)]=\"cell.gridAPI.get_cell_inEditMode(cell.gridID).cell.editValue\"\n                    style=\"color: black; width: 30px;\" />\n            </ng-template>\n        </igx-column>\n        <igx-column field=\"QuantityPerUnit\" header=\"Quantity Per Unit\" [dataType]=\"'string'\" [filterable]=\"false\"></igx-column>\n        <igx-column field=\"ReorderLevel\" header=\"Reorder Level\" [dataType]=\"'number'\" [filterable]=\"false\"></igx-column>\n        <igx-column field=\"SupplierID\" header=\"Supplier ID\" [dataType]=\"'number'\" [editable]=\"false\" [filterable]=\"false\"></igx-column>\n        <igx-column field=\"CategoryID\" header=\"Category ID\" [dataType]=\"'number'\" [filterable]=\"false\"></igx-column>\n        <igx-column field=\"Discontinued\" header=\"Discontinued\" [dataType]=\"'boolean'\" [pinned]=\"true\" [filterable]=\"false\"></igx-column>\n    </igx-grid>\n</app-grid-with-transactions>\n<div class=\"buttons-row\">\n    <button igxButton (click)=\"addRow('gridRowEditTransaction')\">Add Row</button>\n    <div class=\"buttons-wrapper\">\n        <button igxButton [disabled]=\"!undoEnabled\" (click)=\"undo()\">Undo</button>\n        <button igxButton [disabled]=\"!redoEnabled\" (click)=\"redo()\">Redo</button>\n        <button igxButton [disabled]=\"!hasTransactions\" (click)=\"openCommitDialog()\">Commit</button>\n    </div>\n</div>\n<igx-dialog title=\"Submit the following transactions?\">\n    <igx-grid #dialogGrid [data]=\"transactionsData\" [rowHeight]=\"64\"\n        [primaryKey]=\"'id'\" width=\"600px\" height=\"300px\" [emptyGridMessage]=\"'No available transactions'\">\n        <igx-column field=\"id\" header=\"ID\" [dataType]=\"'string'\" width=\"100px\"></igx-column>\n        <igx-column field=\"type\" header=\"Type\" width=\"150px\" [sortable]=\"true\">\n            <ng-template igxCell let-cell=\"cell\" let-val>\n                <span [class]=\"classFromType(val)\">{{ typeFormatter(val) }}</span>\n            </ng-template>\n        </igx-column>\n        <igx-column field=\"newValue\" header=\"Value\" width=\"900px\">\n            <ng-template igxCell let-cell=\"cell\" let-val>\n                <span class=\"transaction-log\">{{ stateFormatter(val) }}</span>\n            </ng-template>\n        </igx-column>\n    </igx-grid>\n    <div class=\"buttons-wrapper\">\n        <button igxButton (click)=\"commit()\">Commit</button>\n        <button igxButton (click)=\"discard()\">Discard</button>\n        <button igxButton (click)=\"cancel()\">Cancel</button>\n    </div>\n</igx-dialog>"},{"hasRelativeAssetsUrls":false,"path":"src/app/grid/grid-batch-editing/grid-batch-editing-sample.component.scss","content":"h4 {\n    text-align: center;\n    padding-top: 2%;\n    padding-bottom: 2%;\n}\n.buttons-row {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 5px;\n}\n.buttons-wrapper {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding: 10px 0;\n}\n\n.transaction--update, .transaction--delete, .transaction--add {\n    font-weight: 600;\n}\n.transaction--add {\n    color: #6b3;\n}\n.transaction--update {\n    color: #4a71b9;\n}\n.transaction--delete {\n    color: #ee4920;\n}\n.transaction-log {\n    word-wrap: none;\n}"},{"hasRelativeAssetsUrls":false,"path":"src/app/grid/grid-batch-editing/data.ts","content":"export const data = [{\n    CategoryID: 1,\n    Discontinued: false,\n    OrderDate: new Date(\"2012-02-12\"),\n    ProductID: 1,\n    ProductName: \"Chai\",\n    QuantityPerUnit: \"10 boxes x 20 bags\",\n    ReorderLevel: 10,\n    SupplierID: 1,\n    UnitPrice: \"18.0000\",\n    UnitsInStock: 39,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 1,\n    Discontinued: false,\n    OrderDate: new Date(\"2003-03-17\"),\n    ProductID: 2,\n    ProductName: \"Chang\",\n    QuantityPerUnit: \"24 - 12 oz bottles\",\n    ReorderLevel: 25,\n    SupplierID: 1,\n    UnitPrice: \"19.0000\",\n    UnitsInStock: 17,\n    UnitsOnOrder: 40\n}, {\n    CategoryID: 2,\n    Discontinued: false,\n    OrderDate: new Date(\"2006-03-17\"),\n    ProductID: 3,\n    ProductName: \"Aniseed Syrup\",\n    QuantityPerUnit: \"12 - 550 ml bottles\",\n    ReorderLevel: 25,\n    SupplierID: 1,\n    UnitPrice: \"10.0000\",\n    UnitsInStock: 13,\n    UnitsOnOrder: 70\n}, {\n    CategoryID: 2,\n    Discontinued: false,\n    OrderDate: new Date(\"2020-03-17\"),\n    ProductID: 4,\n    ProductName: \"Chef Antons Cajun Seasoning\",\n    QuantityPerUnit: \"48 - 6 oz jars\",\n    ReorderLevel: 0,\n    SupplierID: 2,\n    UnitPrice: \"22.0000\",\n    UnitsInStock: 53,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 2,\n    Discontinued: true,\n    OrderDate: new Date(\"2011-11-11\"),\n    ProductID: 5,\n    ProductName: \"Chef Antons Gumbo Mix\",\n    QuantityPerUnit: \"36 boxes\",\n    ReorderLevel: 0,\n    SupplierID: 2,\n    UnitPrice: \"21.3500\",\n    UnitsInStock: 0,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 2,\n    Discontinued: false,\n    OrderDate: new Date(\"2017-12-17\"),\n    ProductID: 6,\n    ProductName: \"Grandmas Boysenberry Spread\",\n    QuantityPerUnit: \"12 - 8 oz jars\",\n    ReorderLevel: 25,\n    SupplierID: 3,\n    UnitPrice: \"25.0000\",\n    UnitsInStock: 0,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 7,\n    Discontinued: false,\n    OrderDate: new Date(\"2016-07-17\"),\n    ProductID: 7,\n    ProductName: \"Uncle Bobs Organic Dried Pears\",\n    QuantityPerUnit: \"12 - 1 lb pkgs.\",\n    ReorderLevel: 10,\n    SupplierID: 3,\n    UnitPrice: \"30.0000\",\n    UnitsInStock: 150,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 2,\n    Discontinued: false,\n    OrderDate: new Date(\"2025-01-17\"),\n    ProductID: 8,\n    ProductName: \"Northwoods Cranberry Sauce\",\n    QuantityPerUnit: \"12 - 12 oz jars\",\n    ReorderLevel: 0,\n    SupplierID: 3,\n    UnitPrice: \"40.0000\",\n    UnitsInStock: 6,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 6,\n    Discontinued: true,\n    OrderDate: new Date(\"2010-02-17\"),\n    ProductID: 9,\n    ProductName: \"Mishi Kobe Niku\",\n    QuantityPerUnit: \"18 - 500 g pkgs.\",\n    ReorderLevel: 0,\n    SupplierID: 4,\n    UnitPrice: \"$97.0000\",\n    UnitsInStock: 29,\n    UnitsOnOrder: 0\n}, {\n    CategoryID: 8,\n    Discontinued: false,\n    OrderDate: new Date(\"2008-05-17\"),\n    ProductID: 10,\n    ProductName: \"Ikura\",\n    QuantityPerUnit: \"12 - 200 ml jars\",\n    ReorderLevel: 0,\n    SupplierID: 4,\n    UnitPrice: \"31.0000\",\n    UnitsInStock: 31,\n    UnitsOnOrder: 0\n}];\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/grid/grid-batch-editing/grid-transaction.component.ts","content":"import { Component } from \"@angular/core\";\nimport { IgxGridTransaction, IgxTransactionService } from \"igniteui-angular\";\n\n@Component({\n    providers: [{ provide: IgxGridTransaction, useClass: IgxTransactionService }],\n    selector: \"app-grid-with-transactions\",\n    template: \"<ng-content></ng-content>\"\n})\nexport class GridWithTransactionsComponent { }\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { GridBatchEditingSampleComponent } from \"./grid/grid-batch-editing/grid-batch-editing-sample.component\";\r\nimport { \r\n\tIgxGridModule,\r\n\tIgxDialogModule,\r\n\tIgxButtonModule,\r\n\tIgxFocusModule\r\n } from \"igniteui-angular\";\r\nimport { GridWithTransactionsComponent } from \"./grid/grid-batch-editing/grid-transaction.component\";\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\r\n\t\tGridBatchEditingSampleComponent,\r\n\t\tGridWithTransactionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\r\n\t\tIgxGridModule,\r\n\t\tIgxDialogModule,\r\n\t\tIgxButtonModule,\r\n\t\tIgxFocusModule\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class AppModule {}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-grid-row-edit></app-grid-row-edit>"}],"sampleDependencies":"{\"@angular/animations\":\"7.1.1\",\"@angular/common\":\"7.1.1\",\"@angular/compiler\":\"7.1.1\",\"@angular/core\":\"7.1.1\",\"@angular/forms\":\"7.1.1\",\"@angular/http\":\"7.1.1\",\"@angular/platform-browser\":\"7.1.1\",\"@angular/platform-browser-dynamic\":\"7.1.1\",\"@angular/router\":\"7.1.1\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.4.1\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"7.1.0\",\"immediate\":\"^3.2.3\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.3.3\",\"tslib\":\"^1.9.0\",\"web-animations-js\":\"^2.3.1\",\"zone.js\":\"^0.8.26\"}"}