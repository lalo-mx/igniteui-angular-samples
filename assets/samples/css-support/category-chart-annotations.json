{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/category-chart/annotations/category-chart-annotations.component.ts","content":"import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: \"app-category-chart-annotations\",\n    styleUrls: [\"./category-chart-annotations.component.css\"],\n    templateUrl: \"./category-chart-annotations.component.html\"\n})\nexport class CategoryChartAnnotationsComponent {\n\n    public categoryData: WeatherMeasure[];\n    public sampleOptions: SampleOptions = new SampleOptions();\n    public include: string[];\n\n    constructor() {\n        const year: number = new Date().getFullYear();\n        this.categoryData = [\n            new WeatherMeasure({ high: 74, low: 65, date: new Date(year, 0, 1) }),\n            new WeatherMeasure({ high: 74, low: 71, date: new Date(year, 1, 1) }),\n            new WeatherMeasure({ high: 76, low: 73, date: new Date(year, 2, 1) }),\n            new WeatherMeasure({ high: 78, low: 74, date: new Date(year, 3, 1) }),\n            new WeatherMeasure({ high: 83, low: 76, date: new Date(year, 4, 1) }),\n            new WeatherMeasure({ high: 87, low: 82, date: new Date(year, 5, 1) }),\n            new WeatherMeasure({ high: 94, low: 87, date: new Date(year, 6, 1) }),\n            new WeatherMeasure({ high: 97, low: 92, date: new Date(year, 7, 1) }),\n            new WeatherMeasure({ high: 93, low: 88, date: new Date(year, 8, 1) }),\n            new WeatherMeasure({ high: 86, low: 83, date: new Date(year, 9, 1) }),\n            new WeatherMeasure({ high: 81, low: 78, date: new Date(year, 10, 1) }),\n            new WeatherMeasure({ high: 79, low: 71, date: new Date(year, 11, 1) })\n        ];\n\n        this.include = [\"date\", \"high\", \"low\"];\n\n        const calloutParser: CalloutCategoryDataParser = new CalloutCategoryDataParser(this.categoryData);\n        calloutParser.parseForCalloutData();\n    }\n\n    public formatDateLabel(item: any): string {\n        return item.date.toLocaleDateString(undefined, {month: \"long\"});\n    }\n}\n\nclass WeatherMeasure {\n    public date: Date;\n    public high: number;\n    public low: number;\n\n    //  Callout Properties\n    public index: number;\n    public value: number;\n    public content: string;\n\n    public constructor(init?: Partial<WeatherMeasure>) {\n        Object.assign(this, init);\n    }\n}\n\nclass CalloutCategoryDataParser extends Array {\n\n    private categoryData: WeatherMeasure[];\n\n    constructor(categoryData: WeatherMeasure[]) {\n        super();\n\n        this.categoryData = categoryData;\n    }\n\n    public parseForCalloutData = function() {\n        let minItem: WeatherMeasure = null;\n        let maxItem: WeatherMeasure = null;\n        let minVal: number = Number.MAX_VALUE;\n        let maxVal: number = Number.MIN_VALUE;\n        let idx: number = 0;\n\n        for (const item of this.categoryData) {\n            item.index = idx;\n\n            if (minVal > item.low) {\n                minVal = item.low;\n                minItem = item;\n                minItem.index = idx + 0.5;\n            }\n            if (maxVal < item.high) {\n                maxVal = item.high;\n                maxItem = item;\n            }\n\n            item.value = item.high;\n\n            switch (item.date.getMonth()) {\n                case 11:\n                case 0:\n                case 1:\n                    {\n                        item.content = \"WINTER\";\n                    }\n                    break;\n                case 2:\n                case 3:\n                case 4:\n                    {\n                        item.content = \"SPRING\";\n                    }\n                    break;\n                case 5:\n                case 6:\n                case 7:\n                    {\n                        item.content = \"SUMMER\";\n                    }\n                    break;\n                case 8:\n                case 9:\n                case 10:\n                    {\n                        item.content = \"FALL\";\n                    }\n                    break;\n            }\n\n            // if (item.temperatureHigh - item.averageTemperature > 10) {\n            //     this.push({\n            //         content: \"Very high over average for \" + item.date.toLocaleDateString(),\n            //         index: idx,\n            //         yValue: item.temperatureHigh });\n            // }\n            idx++;\n        }\n\n        minItem.content = \"MIN\";\n        minItem.value = minItem.low;\n        maxItem.content = \"MAX\";\n        maxItem.value = maxItem.high;\n    };\n}\n\nclass SampleOptions {\n\n    public chartType: string = \"Column\";\n    public crosshairsDisplay: string = \"Horizontal\";\n    public snapCrosshairs: boolean = false;\n    public crosshairAnnotations: boolean = true;\n\n    public finalValuesVisible: boolean = false;\n\n    public calloutsVisible: boolean = false;\n}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/category-chart/annotations/category-chart-annotations.component.html","content":"<div class=\"sample-wrapper container\">\n    <div class=\"options\">\n        <div>\n            <label width=\"130px\" class=\"optionLabel\" >Chart Type: </label>\n            <select class=\"optionSelector\" [(ngModel)]=\"sampleOptions.chartType\">\n                <option>Column</option>\n                <option>Area</option>\n                <option>Line</option>\n                <option>Point</option>\n                <option>Spline</option>\n                <option>SplineArea</option>\n                <option>StepArea</option>\n                <option>StepLine</option>\n            </select>\n\n            <label class=\"optionItem\"><input [(ngModel)]=\"sampleOptions.calloutsVisible\" type=\"checkbox\" />Enable Callouts</label>\n            <label class=\"optionItem\"><input [(ngModel)]=\"sampleOptions.finalValuesVisible\" type=\"checkbox\" />Enable Final Value Annotations</label>\n        </div>\n        <div>\n            <label width=\"130px\" class=\"optionLabel\">Crosshairs: </label>\n            <select class=\"optionSelector\" [(ngModel)]=\"sampleOptions.crosshairsDisplay\">\n                <option>Default</option>\n                <option>None</option>\n                <option>Horizontal</option>\n                <option>Vertical</option>\n                <option>Both</option>\n            </select>\n\n            <label class=\"optionItem\"><input [(ngModel)]=\"sampleOptions.snapCrosshairs\" type=\"checkbox\" />Snap Crosshairs to Data</label>\n            <label class=\"optionItem\"><input [(ngModel)]=\"sampleOptions.crosshairAnnotations\" type=\"checkbox\" />Enable Crosshairs Annotations</label>\n        </div>\n    </div>\n\n    <div class=\"chart\">\n        <igx-category-chart height=\"100%\" width=\"100%\"\n            [dataSource]=\"categoryData\"\n            [chartType]=\"sampleOptions.chartType\"\n            chartTitle=\"Weather Data\"\n            subtitle=\"(High, Low)\"\n            xAxisInterval=\"1\"\n            yAxisMinimumValue=\"60\"\n            yAxisMaximumValue=\"110\"\n            [xAxisFormatLabel]=\"formatDateLabel\"\n            [includedProperties]=\"include\"\n\n            [crosshairsDisplayMode]=\"sampleOptions.crosshairsDisplay\"\n            [crosshairsSnapToData]=\"sampleOptions.snapCrosshairs\"\n            [crosshairsAnnotationEnabled]=\"sampleOptions.crosshairAnnotations\"\n\n            [finalValueAnnotationsVisible]=\"sampleOptions.finalValuesVisible\"\n\n            [calloutsVisible]=\"sampleOptions.calloutsVisible\"\n            [calloutsDataSource]=\"categoryData\"\n            calloutsXMemberPath=\"index\"\n            calloutsYMemberPath=\"value\"\n            calloutsLabelMemberPath=\"content\">\n        </igx-category-chart>\n\n    </div>\n</div>\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/category-chart/annotations/category-chart-annotations.component.css","content":".container {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n  min-width: 300px; }\n\n.chart {\n  flex: 1;\n  overflow: hidden; }\n\n.options {\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-right: 10px;\n  margin-left: 10px;\n  width: 100%;\n  font-size: 1rem;\n  font-family: sans-serif; }\n\n.optionLabel {\n  margin-left: 15px;\n  margin-right: 5px;\n  font-size: 1rem;\n  font-family: sans-serif; }\n\n.optionItem {\n  margin-left: 10px;\n  display: inline-block;\n  vertical-align: center; }\n\n.optionSelector {\n  margin-left: 10px;\n  display: inline-block;\n  vertical-align: center;\n  width: 120px; }\n\ninput {\n  width: 15px;\n  height: 15px;\n  margin-bottom: 6px;\n  margin-left: 4px;\n  vertical-align: bottom; }\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { IgxCategoryChartModule } from \"igniteui-angular-charts/ES5/igx-category-chart-module\";\r\nimport { CategoryChartAnnotationsComponent } from \"./category-chart/annotations/category-chart-annotations.component\";\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\r\n\t\tCategoryChartAnnotationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\r\n\t\tIgxCategoryChartModule\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class AppModule {}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-category-chart-annotations></app-category-chart-annotations>"}],"sampleDependencies":"{\"@angular/animations\":\"7.1.1\",\"@angular/common\":\"7.1.1\",\"@angular/compiler\":\"7.1.1\",\"@angular/core\":\"7.1.1\",\"@angular/forms\":\"7.1.1\",\"@angular/platform-browser\":\"7.1.1\",\"@angular/platform-browser-dynamic\":\"7.1.1\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.4.1\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"7.1.0\",\"igniteui-angular-charts\":\"6.2.2\",\"igniteui-angular-core\":\"6.2.2\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.3.3\",\"tslib\":\"^1.9.0\",\"web-animations-js\":\"^2.3.1\",\"zone.js\":\"^0.8.26\"}"}