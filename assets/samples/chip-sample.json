{"sampleFiles":[{"hasRelativeAssetsUrls":true,"path":"src/app/chip/chip.component.ts","content":"import { ChangeDetectorRef, Component, ElementRef, Pipe, PipeTransform, ViewChild } from \"@angular/core\";\nimport {\n    ConnectedPositioningStrategy,\n    IgxChipsAreaComponent,\n    IgxDropDownComponent,\n    IgxInputDirective,\n    IgxInputGroupComponent,\n    IgxToastPosition\n} from \"igniteui-angular\";\n\n@Component({\n    selector: \"app-chip\",\n    styleUrls: [\"./chip.component.scss\"],\n    templateUrl: \"./chip.component.html\"\n})\n\nexport class ChipSampleComponent {\n    public dropDownList = [\n        {\n            email: \"lisalanders@gmail.com\",\n            id: \"901-747-3428\",\n            name: \"Lisa Landers\",\n            photo: \"assets/images/women/3.jpg\"\n        },\n        {\n            email: \"lisaspencer@gmail.com\",\n            id: \"901-747-5555\",\n            name: \"Lisa Spencer\",\n            photo: \"assets/images/women/66.jpg\"\n        },\n        {\n            email: \"dorothyspancer@gmail.com\",\n            id: \"573-394-9254\",\n            name: \"Dorothy H. Spencer\",\n            photo: \"assets/images/women/67.jpg\"\n        },\n        {\n            email: \"dorotaylor@gmail.com\",\n            id: \"573-394-33334\",\n            name: \"Dorothy Taylor\",\n            photo: \"assets/images/women/69.jpg\"\n        },\n        {\n            email: \"stephaniemay@gmail.com\",\n            id: \"323-668-1482\",\n            name: \"Stephanie May\",\n            photo: \"assets/images/avatar/13.jpg\"\n        },\n        {\n            email: \"mariannetaylor@gmail.com\",\n            id: \"401-661-3742\",\n            name: \"Marianne Taylor\",\n            photo: \"assets/images/avatar/14.jpg\"\n        },\n        {\n            email: \"tammiealvarez@gmail.com\",\n            id: \"662-374-2920\",\n            name: \"Tammie Alvarez\",\n            photo: \"assets/images/avatar/15.jpg\"\n        },\n        {\n            email: \"tammyflores@gmail.com\",\n            id: \"662-374-3333\",\n            name: \"Tammie Flores\",\n            photo: \"assets/images/avatar/10.jpg\"\n        },\n        {\n            email: \"charlotteflores@gmail.com\",\n            id: \"240-455-2267\",\n            name: \"Charlotte Flores\",\n            photo: \"assets/images/avatar/16.jpg\"\n        },\n        {\n            email: \"wardriley@gmail.com\",\n            id: \"724-742-0979\",\n            name: \"Ward Riley\",\n            photo: \"assets/images/avatar/17.jpg\"\n        }\n    ];\n\n    public chipList = [\n        {\n            email: \"terranceorta@gmail.com\",\n            id: \"770-504-2217\",\n            name: \"Terrance Orta\",\n            photo: \"assets/images/men/27.jpg\"\n        },\n        {\n            email: \"richard@gmail.com\",\n            id: \"423-676-2869\",\n            name: \"Richard Mahoney\",\n            photo: \"assets/images/men/13.jpg\"\n        },\n        {\n            email: \"donnaprice@gmail.com\",\n            id: \"859-496-2817\",\n            name: \"Donna Price\",\n            photo: \"assets/images/women/50.jpg\"\n        }\n    ];\n\n    public tagList = [\n        { id: \"All Users\", text: \"All Users\" },\n        { id: \"My Team\", text: \"My Team\" },\n        { id: \"USA Team\", text: \"USA Team\" },\n        { id: \"Engineering Services\", text: \"Engineering Services\" }\n    ];\n\n    public toastPosition: IgxToastPosition = IgxToastPosition.Middle;\n\n    @ViewChild(\"chipsAreaCc\", { read: IgxChipsAreaComponent })\n    public chipsAreaCc: IgxChipsAreaComponent;\n\n    @ViewChild(\"ccGroup\", { read: IgxInputDirective })\n    public ccGroup: IgxInputDirective;\n\n    @ViewChild(\"textArea\", { read: ElementRef})\n    public textArea: ElementRef;\n\n    @ViewChild(\"chipsArea\", { read: IgxChipsAreaComponent })\n    public chipsArea: IgxChipsAreaComponent;\n\n    @ViewChild(\"inputForm\", { read: IgxInputDirective })\n    public inputBox: IgxInputDirective;\n\n    @ViewChild(IgxDropDownComponent)\n    public igxDropDown: IgxDropDownComponent;\n\n    @ViewChild(\"inputGroup\", {read: IgxInputGroupComponent})\n    public inputGroup: IgxInputGroupComponent;\n\n    private dropDownOpened = false;\n\n    constructor(public cdr: ChangeDetectorRef) { }\n\n    public chipsOrderChanged(event) {\n        const newChipList = [];\n        for (const chip of event.chipsArray) {\n            const chipItem = this.chipList.filter((item) => {\n                return item.id === chip.id;\n            })[0];\n            newChipList.push(chipItem);\n        }\n        this.chipList = newChipList;\n        event.isValid = true;\n        this.cdr.detectChanges();\n    }\n\n    public chipRemoved(event) {\n        this.chipList = this.chipList.filter((item) => {\n            return item.id !== event.owner.id;\n        });\n        this.chipsArea.cdr.detectChanges();\n    }\n\n    public selectChip(chipId) {\n        const chipToSelect = this.chipsArea.chipsList.toArray().find((chip) => {\n            return chip.id === chipId;\n        });\n        chipToSelect.selected = true;\n        this.igxDropDown.close();\n    }\n\n    public toggleDropDown(ev) {\n        if (!this.dropDownOpened && this.inputBox.value !== null && ev.key.length === 1) {\n            this.igxDropDown.open({\n                modal: false,\n                positionStrategy: new ConnectedPositioningStrategy({\n                    target: this.inputBox.nativeElement\n                })\n            });\n            this.inputBox.focus();\n        }\n    }\n\n    public clickedOutside(e) {\n        this.igxDropDown.close();\n    }\n\n    public addEmail() {\n        if (this.inputBox.valid === 1) {\n            let i;\n            let exists = 0;\n\n            if (\n                this.chipList.find(\n                    (val) => val.email === this.inputBox.value.toLowerCase()\n                ) !== undefined\n            ) {\n                return;\n            }\n            for (i = 0; i < this.dropDownList.length; i++) {\n                if (\n                    this.inputBox.value.toLowerCase() ===\n                    this.dropDownList[i].email\n                ) {\n                    this.chipList.push({\n                        email: this.dropDownList[i].email,\n                        id: this.dropDownList[i].id,\n                        name: this.dropDownList[i].name,\n                        photo: this.dropDownList[i].photo\n                    });\n                    exists = 1;\n                    this.igxDropDown.close();\n                    this.inputBox.value = \"\";\n                }\n            }\n            if (exists === 0) {\n                this.chipList.push({\n                    email: this.inputBox.value,\n                    id: this.inputBox.value,\n                    name: this.inputBox.value,\n                    photo: \"assets/images/list/empty.png\"\n                });\n            }\n            this.igxDropDown.close();\n            this.inputBox.focus();\n            this.inputBox.value = \"\";\n        }\n    }\n\n    public openDropDown() {\n        if (this.dropDownOpened) {\n            return;\n        }\n\n        this.igxDropDown.open({\n            modal: false,\n            positionStrategy: new ConnectedPositioningStrategy({\n                target: this.inputGroup.element.nativeElement\n            })\n        });\n    }\n\n    public onDropDownOpen() {\n        this.dropDownOpened = true;\n    }\n\n    public onDropDownClose() {\n        this.dropDownOpened = false;\n    }\n\n    public itemSelection(ev) {\n        if (\n            this.chipList.find(\n                (val) => val.name === ev.newSelection.elementRef.nativeElement.textContent\n            ) !== undefined\n        ) {\n            return;\n        }\n        let i;\n        for (i = 0; i < this.dropDownList.length; i++) {\n            if (\n                ev.newSelection.elementRef.nativeElement.textContent ===\n                this.dropDownList[i].name\n            ) {\n                this.chipList.push({\n                    email: this.dropDownList[i].email,\n                    id: this.dropDownList[i].id,\n                    name: this.dropDownList[i].name,\n                    photo: this.dropDownList[i].photo\n                });\n                this.igxDropDown.close();\n                this.inputBox.value = \"\";\n            }\n        }\n    }\n\n    /**\n     * Tags sample\n     */\n\n    public chipsOrderChangedCc(event) {\n        const newTagList = [];\n        for (const chip of event.chipsArray) {\n            const chipItem = this.tagList.filter((item) => {\n                return item.id === chip.id;\n            })[0];\n            newTagList.push(chipItem);\n        }\n        this.tagList = newTagList;\n        event.isValid = true;\n        this.cdr.detectChanges();\n    }\n\n    public selectChipCc(chipId) {\n        const chipToSelect = this.chipsAreaCc.chipsList.toArray().find((chip) => {\n            return chip.id === chipId;\n        });\n        if (chipToSelect.selected === true) {\n            this.ccGroup.value = this.ccGroup.value.replace(chipToSelect.id + \", \", \"\");\n        } else {\n            this.ccGroup.value += chipToSelect.id + \", \";\n        }\n    }\n\n    public chipRemovedCc(event) {\n        this.tagList = this.tagList.filter((item) => {\n            return item.id !== event.owner.id;\n        });\n        this.chipsAreaCc.cdr.detectChanges();\n    }\n\n    public clear() {\n        this.ccGroup.value = \"\";\n        this.textArea.nativeElement.value = \"\";\n        this.chipList = [];\n\n        this.chipsAreaCc.chipsList.forEach((chip) => {\n            chip.selected = false;\n        });\n\n    }\n\n    public showToast(toast, position) {\n        switch (position) {\n            case \"middle\":\n                this.toastPosition = IgxToastPosition.Middle;\n                break;\n            case \"top\":\n                this.toastPosition = IgxToastPosition.Top;\n                break;\n            default:\n                this.toastPosition = IgxToastPosition.Bottom;\n        }\n\n        toast.show();\n    }\n}\n@Pipe({ name: \"filter\" })\nexport class EmailFilterPipe implements PipeTransform {\n    public transform(item: any, inputVal) {\n        return item.filter((e) => e.email.startsWith(inputVal.toLowerCase()));\n    }\n}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/chip/chip.component.html","content":"<div class=\"sample-wrapper\">\n    <section class=\"sample-content\">\n        <div class=\"sample-holder\">\n            <div class=\"chips\">\n                <igx-chips-area #chipsArea class=\"chiparea\" (onMoveStart)=\"clickedOutside($event)\" (onReorder)=\"chipsOrderChanged($event)\">\n                    <igx-chip class=\"chipStyle\" *ngFor=\"let chip of chipList\" [id]=\"chip.id\" [draggable]=\"true\" [removable]=\"true\" (onRemove)=\"chipRemoved($event)\">\n                        <igx-avatar class=\"chip-avatar-resized\" igxPrefix fontSet=\"material\" [src]=\"chip.photo\" roundShape=\"true\"></igx-avatar>\n                        <span #label [class]=\"'igx-chip__text'\">{{chip.name}}</span>\n                    </igx-chip>\n                </igx-chips-area>\n            </div>\n            <div class=\"inputs\">\n                <igx-input-group #inputGroup>\n                    <igx-prefix>To:</igx-prefix>\n                    <label igxLabel>Email address</label>\n                    <input igxInput #inputForm (keyup.enter)=\"addEmail()\" (keydown)=\"toggleDropDown($event)\" (keydown.ArrowDown)=\"openDropDown()\"\n                        type=\"email\" [igxDropDownItemNavigation]=\"dropdown\" required />\n                </igx-input-group>\n                <igx-input-group>\n                    <igx-prefix>Cc:</igx-prefix>\n                    <input #ccGroup igxInput [disabled]=\"'true'\" />\n                </igx-input-group>\n                <igx-drop-down #dropdown (onSelection)=\"itemSelection($event)\" (onOpened)=\"onDropDownOpen()\" (onClosed)=\"onDropDownClose()\">\n                    <igx-drop-down-item *ngFor=\"let item of dropDownList | filter:inputForm.value\">\n                        <div class=\"igx-drop-down__item-template\">\n                            <igx-avatar igxPrefix fontSet=\"material\" [src]=\"item.photo\" roundShape=\"true\"></igx-avatar>\n                            <span igxSufix>{{item.name}}</span>\n                        </div>\n                    </igx-drop-down-item>\n                </igx-drop-down>\n            </div>\n            <div class=\"chips\">\n                <igx-chips-area #chipsAreaCc (onReorder)=\"chipsOrderChangedCc($event)\">\n                    <igx-chip class=\"chipStyle\" *ngFor=\"let chip of tagList\" [id]=\"chip.id\" [selectable]=\"true\" (onRemove)=\"chipRemovedCc($event)\" (onSelection)=\"selectChipCc(chip.id)\">\n                        <span #label [class]=\"'igx-chip__text'\">{{chip.text}}</span>\n                    </igx-chip>\n                </igx-chips-area>\n                <textarea #textArea placeholder=\"Hey,&#10;&#10;Check out IgniteUI for Angular!\" class=\"emailText\"></textarea>\n            </div>\n            <button class=\"toggle-button\" igxButton=\"raised\" igxRipple=\"white\" (click)=\"clear()\" (click)=\"showToast(toast, 'middle')\"\n                [disabled]=\"toast.isVisible\">Send</button>\n            <igx-toast #toast message=\"Your email has been sent!\" [position]=\"toastPosition\"></igx-toast>\n        </div>\n    </section>\n</div>"},{"hasRelativeAssetsUrls":false,"path":"src/app/chip/chip.component.scss","content":".sample-holder {\n    padding: 30px;\n    border: 1px dotted #ddd;\n    margin: 0 auto;\n    width: 700px;\n    display: block;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    overflow-y: auto;\n    overflow-x: hidden;\n    height: 650px;\n}\n.chiparea{\n    width: 640px;\n    margin-top: 1.5em;\n    flex-flow: wrap;\n}\n.chips{\n    z-index: 1;\n}\n\n:host ::ng-deep .igx-drop-down {\n    z-index: 2;\n}\n\n.igx-drop-down__item {\n    margin: 0.75em 0em;\n}\n\n.igx-drop-down__item ::ng-deep .igx-avatar__image {\n    padding: 0.75em;\n}\n\n.emailText{\n    margin: 0px;\n    height: 300px;\n    margin-top: 1.5em;\n    width: 640px;\n    resize: none;\n    line-height: 1em;\n    font-size: 1em;\n    min-width: 0;\n    overflow: visible;\n    font-family: inherit;\n    background: transparent;\n    color: rgba(0, 0, 0, 0.87);\n    outline-style: none;\n    box-shadow: none;\n}\n\n.emailText{\n    height: 270px;\n}\n\n.emailText:focus{\n    cursor: text;\n}\n\n.chip-avatar-resized {\n    width: 2em;\n    height: 2em;\n    min-width: 2em;\n}\n\n.chipStyle {\n    margin-right: 0.5em;\n    margin-bottom: 0.5em;\n}"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { \r\n\tIgxChipsModule,\r\n\tIgxDropDownModule,\r\n\tIgxInputGroupModule,\r\n\tIgxToastModule,\r\n\tIgxAvatarModule\r\n } from \"igniteui-angular\";\r\nimport { \r\n\tChipSampleComponent,\r\n\tEmailFilterPipe\r\n } from \"./chip/chip.component\";\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\r\n\t\tChipSampleComponent,\r\n\t\tEmailFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\r\n\t\tIgxChipsModule,\r\n\t\tIgxDropDownModule,\r\n\t\tIgxInputGroupModule,\r\n\t\tIgxToastModule,\r\n\t\tIgxAvatarModule\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class AppModule {}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-chip></app-chip>"}],"sampleDependencies":"{\"@angular/animations\":\"7.1.1\",\"@angular/common\":\"7.1.1\",\"@angular/compiler\":\"7.1.1\",\"@angular/core\":\"7.1.1\",\"@angular/forms\":\"7.1.1\",\"@angular/http\":\"7.1.1\",\"@angular/platform-browser\":\"7.1.1\",\"@angular/platform-browser-dynamic\":\"7.1.1\",\"@angular/router\":\"7.1.1\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.4.1\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"7.1.0\",\"immediate\":\"^3.2.3\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.3.3\",\"tslib\":\"^1.9.0\",\"web-animations-js\":\"^2.3.1\",\"zone.js\":\"^0.8.26\"}"}