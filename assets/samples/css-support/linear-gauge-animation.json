{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/gauges/linear-gauge-animation/linear-gauge-animation.component.ts","content":"import { AfterViewInit, Component, ViewChild } from \"@angular/core\";\n\nimport { IgxLinearGaugeComponent } from \"igniteui-angular-gauges/ES5/igx-linear-gauge-component\";\nimport { IgxLinearGraphRangeComponent } from \"igniteui-angular-gauges/ES5/igx-linear-graph-range-component\";\nimport { LinearGraphNeedleShape } from \"igniteui-angular-gauges/ES5/LinearGraphNeedleShape\";\n\n@Component({\n  selector: \"app-linear-gauge-animation\",\n  styleUrls: [ \"./linear-gauge-animation.component.css\"],\n  templateUrl: \"./linear-gauge-animation.component.html\"\n})\n\nexport class LinearGaugeAnimationComponent implements AfterViewInit {\n\n    @ViewChild(\"linearGauge\")\n    public linearGauge: IgxLinearGaugeComponent;\n\n    public ngAfterViewInit(): void {\n\n        // enabling animation duration (in milliseconds)\n        this.linearGauge.transitionDuration = 500;\n        this.AnimateToGauge3();\n    }\n\n    public AnimateToGauge3(): void {\n        // linear gauge requires settings for these properties:\n        this.linearGauge.minimumValue = 0;\n        this.linearGauge.maximumValue = 100;\n        this.linearGauge.value = 50;\n        this.linearGauge.interval = 10;\n\n        // setting custom appearance of labels\n        this.linearGauge.labelInterval = 10;\n        this.linearGauge.labelExtent = 0.05;\n\n        // setting custom appearance of needle\n        this.linearGauge.isNeedleDraggingEnabled = true;\n        this.linearGauge.needleShape = LinearGraphNeedleShape.Needle;\n        this.linearGauge.needleBrush = \"#79797a\";\n        this.linearGauge.needleOutline = \"#ffffffff\";\n        this.linearGauge.needleStrokeThickness = 1;\n        this.linearGauge.needleOuterExtent = 0.9;\n        this.linearGauge.needleInnerExtent = 0.3;\n\n        // setting custom appearance of major/minor ticks\n        this.linearGauge.minorTickCount = 5;\n        this.linearGauge.minorTickEndExtent = 0.10;\n        this.linearGauge.minorTickStartExtent = 0.20;\n        this.linearGauge.minorTickStrokeThickness = 1;\n        this.linearGauge.tickStartExtent = 0.25;\n        this.linearGauge.tickEndExtent = 0.05;\n        this.linearGauge.tickStrokeThickness = 2;\n\n        // setting custom gauge ranges\n        const range1 = new IgxLinearGraphRangeComponent();\n        range1.startValue = 0;\n        range1.endValue = 30;\n        const range2 = new IgxLinearGraphRangeComponent();\n        range2.startValue = 30;\n        range2.endValue = 70;\n        const range3 = new IgxLinearGraphRangeComponent();\n        range3.startValue = 70;\n        range3.endValue = 100;\n\n        this.linearGauge.rangeBrushes  = [ \"#9FB328\", \"#438C47\", \"#3F51B5\"];\n        this.linearGauge.rangeOutlines = [ \"#9FB328\", \"#438C47\", \"#3F51B5\"];\n        this.linearGauge.ranges.clear();\n        this.linearGauge.ranges.add(range1);\n        this.linearGauge.ranges.add(range2);\n        this.linearGauge.ranges.add(range3);\n\n        // setting extent of all gauge ranges\n        for (let i = 0; i < this.linearGauge.ranges.count; i++) {\n            const range = this.linearGauge.ranges.item(i);\n            range.innerStartExtent = 0.075;\n            range.innerEndExtent = 0.075;\n            range.outerStartExtent = 0.65;\n            range.outerEndExtent = 0.65;\n        }\n\n        // setting extent of gauge scale\n        this.linearGauge.scaleStrokeThickness = 0;\n        this.linearGauge.scaleBrush = \"#ffffff\";\n        this.linearGauge.scaleOutline = \"#dbdbdb\";\n        this.linearGauge.scaleInnerExtent = 0.075;\n        this.linearGauge.scaleOuterExtent = 0.85;\n        this.linearGauge.scaleStartExtent = 0.05;\n        this.linearGauge.scaleEndExtent = 0.95;\n\n        // setting appearance of backing fill and outline\n        this.linearGauge.backingBrush = \"#ffffff\";\n        this.linearGauge.backingOutline = \"#d1d1d1\";\n        this.linearGauge.backingStrokeThickness = 0;\n    }\n\n    public AnimateToGauge2(): void {\n           // linear gauge requires settings for these properties:\n           this.linearGauge.minimumValue = 100;\n           this.linearGauge.maximumValue = 200;\n           this.linearGauge.value = 150;\n           this.linearGauge.interval = 20;\n\n           // setting custom appearance of labels\n           this.linearGauge.labelInterval = 20;\n           this.linearGauge.labelExtent = 0.05;\n\n           // setting custom appearance of needle\n           this.linearGauge.isNeedleDraggingEnabled = true;\n           this.linearGauge.needleShape = LinearGraphNeedleShape.Triangle;\n           this.linearGauge.needleBrush = \"#79797a\";\n           this.linearGauge.needleOutline = \"#ffffffff\";\n           this.linearGauge.needleStrokeThickness = 1;\n           this.linearGauge.needleOuterExtent = 0.9;\n           this.linearGauge.needleInnerExtent = 0.3;\n\n           // setting custom appearance of major/minor ticks\n           this.linearGauge.minorTickCount = 4;\n           this.linearGauge.minorTickEndExtent = 0.10;\n           this.linearGauge.minorTickStartExtent = 0.20;\n           this.linearGauge.minorTickStrokeThickness = 1;\n           this.linearGauge.tickStartExtent = 0.25;\n           this.linearGauge.tickEndExtent = 0.05;\n           this.linearGauge.tickStrokeThickness = 2;\n\n           // setting custom gauge ranges\n           const range1 = new IgxLinearGraphRangeComponent();\n           range1.startValue = 100;\n           range1.endValue = 125;\n           const range2 = new IgxLinearGraphRangeComponent();\n           range2.startValue = 125;\n           range2.endValue = 150;\n           const range3 = new IgxLinearGraphRangeComponent();\n           range3.startValue = 150;\n           range3.endValue = 175;\n           const range4 = new IgxLinearGraphRangeComponent();\n           range4.startValue = 175;\n           range4.endValue = 200;\n\n           this.linearGauge.rangeBrushes  = [ \"#0078C8\", \"#0099FF\", \"#21A7FF\", \"#4FB9FF\"];\n           this.linearGauge.rangeOutlines = [ \"#0078C8\", \"#0099FF\", \"#21A7FF\", \"#4FB9FF\"];\n           this.linearGauge.ranges.clear();\n           this.linearGauge.ranges.add(range1);\n           this.linearGauge.ranges.add(range2);\n           this.linearGauge.ranges.add(range3);\n           this.linearGauge.ranges.add(range4);\n\n           // setting extent of all gauge ranges\n           for (let i = 0; i < this.linearGauge.ranges.count; i++) {\n               const range = this.linearGauge.ranges.item(i);\n               range.innerStartExtent = 0.075;\n               range.innerEndExtent = 0.075;\n               range.outerStartExtent = 0.65;\n               range.outerEndExtent = 0.65;\n           }\n\n           // setting extent of gauge scale\n           this.linearGauge.scaleStrokeThickness = 0;\n           this.linearGauge.scaleBrush = \"#ffffff\";\n           this.linearGauge.scaleOutline = \"#dbdbdb\";\n           this.linearGauge.scaleInnerExtent = 0.075;\n           this.linearGauge.scaleOuterExtent = 0.85;\n           this.linearGauge.scaleStartExtent = 0.05;\n           this.linearGauge.scaleEndExtent = 0.95;\n\n           // setting appearance of backing fill and outline\n           this.linearGauge.backingBrush = \"#ffffff\";\n           this.linearGauge.backingOutline = \"#d1d1d1\";\n           this.linearGauge.backingStrokeThickness = 0;\n    }\n\n    public AnimateToGauge1(): void {\n        // linear gauge requires settings for these properties:\n        this.linearGauge.minimumValue = 0;\n        this.linearGauge.maximumValue = 80;\n        this.linearGauge.value = 60;\n        this.linearGauge.interval = 20;\n\n        // setting custom appearance of labels\n        this.linearGauge.labelInterval = 20;\n        this.linearGauge.labelExtent = 0.05;\n\n        // setting custom appearance of needle\n        this.linearGauge.isNeedleDraggingEnabled = true;\n        this.linearGauge.needleShape = LinearGraphNeedleShape.Trapezoid;\n        this.linearGauge.needleBrush = \"#79797a\";\n        this.linearGauge.needleOutline = \"#ffffffff\";\n        this.linearGauge.needleStrokeThickness = 1;\n        this.linearGauge.needleOuterExtent = 0.9;\n        this.linearGauge.needleInnerExtent = 0.3;\n\n        // setting custom appearance of major/minor ticks\n        this.linearGauge.minorTickCount = 5;\n        this.linearGauge.minorTickEndExtent = 0.10;\n        this.linearGauge.minorTickStartExtent = 0.20;\n        this.linearGauge.minorTickStrokeThickness = 1;\n        this.linearGauge.tickStartExtent = 0.25;\n        this.linearGauge.tickEndExtent = 0.05;\n        this.linearGauge.tickStrokeThickness = 2;\n\n        // setting custom gauge ranges\n        const range1 = new IgxLinearGraphRangeComponent();\n        range1.startValue = 0;\n        range1.endValue = 40;\n        const range2 = new IgxLinearGraphRangeComponent();\n        range2.startValue = 40;\n        range2.endValue = 80;\n\n        this.linearGauge.rangeBrushes  = [ \"#a4bd29\", \"#F86232\" ];\n        this.linearGauge.rangeOutlines = [ \"#a4bd29\", \"#F86232\" ];\n        this.linearGauge.ranges.clear();\n        this.linearGauge.ranges.add(range1);\n        this.linearGauge.ranges.add(range2);\n\n        // setting extent of all gauge ranges\n        for (let i = 0; i < this.linearGauge.ranges.count; i++) {\n            const range = this.linearGauge.ranges.item(i);\n            range.innerStartExtent = 0.075;\n            range.innerEndExtent = 0.075;\n            range.outerStartExtent = 0.65;\n            range.outerEndExtent = 0.65;\n        }\n\n        // setting extent of gauge scale\n        this.linearGauge.scaleStrokeThickness = 0;\n        this.linearGauge.scaleBrush = \"#ffffff\";\n        this.linearGauge.scaleOutline = \"#dbdbdb\";\n        this.linearGauge.scaleInnerExtent = 0.075;\n        this.linearGauge.scaleOuterExtent = 0.85;\n        this.linearGauge.scaleStartExtent = 0.05;\n        this.linearGauge.scaleEndExtent = 0.95;\n\n        // setting appearance of backing fill and outline\n        this.linearGauge.backingBrush = \"#ffffff\";\n        this.linearGauge.backingOutline = \"#d1d1d1\";\n        this.linearGauge.backingStrokeThickness = 0;\n    }\n\n}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/gauges/linear-gauge-animation/linear-gauge-animation.component.html","content":"<div>\n    <div>\n        <button igxButton=\"raised\" (click)=\"AnimateToGauge1()\"\n                igxButtonColor=\"black\"\n                igxButtonBackground=\"#e2e2e2\"\n                class=\"sample-button\">Gauge Animation #1</button>\n        <button igxButton=\"raised\" (click)=\"AnimateToGauge2()\"\n                igxButtonColor=\"black\"\n                igxButtonBackground=\"#e2e2e2\"\n                class=\"sample-button\">Gauge Animation #2</button>\n        <button igxButton=\"raised\" (click)=\"AnimateToGauge3()\"\n                igxButtonColor=\"black\"\n                igxButtonBackground=\"#e2e2e2\"\n                class=\"sample-button\">Gauge Animation #3</button>\n    </div>\n\n    <div class=\"sample-container\" >\n\n        <!-- Note the linear gauge requires settings only for\n        minimumValue, maximumValue, and value properties.\n        All other properties are optional and listed here\n        for demonstration purpose only -->\n        <igx-linear-gauge\n            #linearGauge\n            height=\"80px\"\n            width=\"400px\"\n            minimumValue=0\n            maximumValue=100\n            value=50\n            interval=10\n            labelInterval=10\n            labelExtent=0.02\n\n            minorTickEndExtent=0.10,\n            minorTickStartExtent=0.20,\n            tickStartExtent=0.25,\n            tickEndExtent=0.05,\n            tickStrokeThickness=2,\n\n            needleShape=\"Needle\"\n            needleBrush=\"#79797a\"\n            needleOutline=\"#79797a\"\n            scaleStrokeThickness=0\n            scaleBrush=\"#ffffff\"\n            scaleOutline=\"#d3d3d3\"\n            backingBrush=\"#ffffff\"\n            backingOutline=\"#d1d1d1\"\n            backingStrokeThickness=0>\n        </igx-linear-gauge>\n    </div>\n</div>\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/gauges/linear-gauge-animation/linear-gauge-animation.component.css","content":".sample-container {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n  display: block; }\n\n.sample-control {\n  display: block;\n  margin: 0 auto; }\n\n.sample-button {\n  margin-bottom: 5px;\n  margin-right: 10px;\n  height: 30px;\n  font: \"12px 'Titillium Web', sans-serif\"; }\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { IgxLinearGaugeModule } from \"igniteui-angular-gauges/ES5/igx-linear-gauge-module\";\r\nimport { LinearGaugeAnimationComponent } from \"./gauges/linear-gauge-animation/linear-gauge-animation.component\";\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\n    AppComponent,\r\n\t\tLinearGaugeAnimationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\r\n\t\tIgxLinearGaugeModule\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class AppModule {}\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-linear-gauge-animation></app-linear-gauge-animation>"}],"sampleDependencies":"{\"@angular/animations\":\"7.1.1\",\"@angular/common\":\"7.1.1\",\"@angular/compiler\":\"7.1.1\",\"@angular/core\":\"7.1.1\",\"@angular/forms\":\"7.1.1\",\"@angular/platform-browser\":\"7.1.1\",\"@angular/platform-browser-dynamic\":\"7.1.1\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.4.1\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"7.1.0\",\"igniteui-angular-core\":\"6.2.2\",\"igniteui-angular-gauges\":\"6.2.2\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.3.3\",\"tslib\":\"^1.9.0\",\"web-animations-js\":\"^2.3.1\",\"zone.js\":\"^0.8.26\"}"}